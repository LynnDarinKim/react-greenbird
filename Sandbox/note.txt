궁금했던 것들

- npm i -D로 dev dependency로 설치. 개발할 때만 빌드해주는 것.


왜 리액트? 
  1) 사용자 경험
    앱과 비슷한 느낌으로, 화면이 깜빡임이 없다. 
    사용자 인터페이스, 사용자 경험이 좋다. 
    웹보다 앱이 사용자경험이 좋은데, 꼭 앱처럼 깜빡임 없이 웹을 구현할 수 있어. 

  2) 재사용 컴포넌트 
      중복 요소 하나로 묶어서 유지보수하기 좋음!
  3) 데이터-화면 일치
    *  좋아요 -> 포스트 통으로 업데이트 하지 않아도 되게 부분만. 낭비 없이. 


jsx
    자바스크립트 문법이 아니라서 
    바벨 가져와서 하는것. (script src.. script type="text/babel")
    바벨 안에서도 jsx를 설정해줘야 한다. 
    "@babel/core": "^7.8.3", /* 기본바벨 -  최신 문법으로 바꿔줌  */
    "@babel/preset-env": "^7.8.3", /* 환경에 맞게 알아서 바꿔줌 */
    "@babel/preset-react": "^7.8.3", /* jsx바꿔줌 */
    "babel-loader": "^8.0.6",/* 바벨 - 웹팩 연결 */


Webpack
웹팩!
    페이스북처럼 2만개의 자바스크립트 파일이라도 한방에 합쳐서 하나의 자바스크립트로
    하나로 합치면서 바벨도 적용할 수 있고 
    필요없는 코드도 뺴버릴 수 있고 (ex. console.log())
    개발용. (-D)

웹팩의 역할? 
    리액트를 자바스크립트 파일로 만들어준다 .
    쪼개진 자바스크립트 파일을 html이 실행할 수 있는 자바스크립트로 합쳐준다. 
    바벨(+폴리필) - 웹팩이 최신문법을 모든 브라우저에서 돌아갈 수 있도록 바꿔준다. 


노드!
    자바스크립트 실행기 (서버가 아니다 웹팩을 돌리기위한 자바스크립트 실행기를 알아야 한다. )


.jsx? 
    리액트를 쓴다는 것을 표시해줌. 
